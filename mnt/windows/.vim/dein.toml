[[plugins]]
repo = '/home/vagrant/.cache/dein/repos/github.com/Shougo/dein.vim'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'crusoexia/vim-monokai'
hook_add = 'colorscheme monokai'

[[plugins]]
repo = 'myrobo/smart_tabline.vim'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
let g:ctrlp_map = '<c-j>f'
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
" 大文字を含む場合だけ大文字/小文字を区別する
let g:EasyMotion_smartcase = 1
'''

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
fun! FzfOmniFiles()
  let is_git = system('git status')
  if v:shell_error
    :Files
  else
    :GitFiles
  endif
endfun

let g:fzf_layout = { 'down': '~70%' }
command! -bang -nargs=? -complete=dir Files
\ call fzf#vim#files(<q-args>, fzf#vim#with_preview('right:50%:hidden', 'Ctrl-p'), <bang>0)

command! -bang -nargs=? -complete=dir GitFiles
\ call fzf#vim#gitfiles(<q-args>, fzf#vim#with_preview('right:50%:hidden', 'Ctrl-p'), <bang>0)

command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --hidden --column --line-number --no-heading --color=always --smart-case '.shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview('up:60%')
  \           : fzf#vim#with_preview('right:50%:hidden', 'Ctrl-p'),
  \   <bang>0)
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
# マークが表示される
repo = 'kshenoy/vim-signature'

[[plugins]]
repo = 'mbbill/undotree'
hook_add = '''
if has("persistent_undo")
    set undodir=~/.undodir/
    set undofile
endif
'''

[[plugins]]
# 検索プレビュー表示
repo = 'osyo-manga/vim-over'

[[plugins]]
# 検索数表示
repo = 'osyo-manga/vim-anzu'
hook_add = '''

'''

[[plugins]]
repo = 'terryma/vim-multiple-cursors'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
# repo = 'tpope/vim-surround'
repo = 'machakann/vim-sandwich'
hook_add = '''
runtime macros/sandwich/keymap/surround.vim
" [vim-sandwich] +キーでそれに囲まれた領域を選択
xmap is <Plug>(textobj-sandwich-query-i)
xmap as <Plug>(textobj-sandwich-query-a)
omap is <Plug>(textobj-sandwich-query-i)
omap as <Plug>(textobj-sandwich-query-a)

let g:sandwich#recipes = deepcopy(g:sandwich#default_recipes)
let g:sandwich#recipes += [{'buns' : ['「','」']}]
let g:sandwich#recipes += [{'buns' : ['【','】']}]
let g:sandwich#recipes += [{'buns' : ['（','）']}]
let g:sandwich#recipes += [{'buns' : ['『','』']}]
'''

[[plugins]]
repo = 'yuttie/comfortable-motion.vim'
hook_add = '''
let g:comfortable_motion_friction = 300
let g:comfortable_motion_air_drag = 1.0
'''

#-----------------
# textobj
#-----------------

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'michaeljsmith/vim-indent-object'


#-----------------
# operator
#-----------------

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'


#-----------------
# nerdtree
#-----------------

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
depends = ['nerdtree', 'nerdtree-git-plugin']
hook_add = '''
augroup NERD
    au!
    " タブを全て閉じたらVimを終了する
    autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

    function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
      exec 'autocmd filetype nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='. a:guifg
      exec 'autocmd filetype nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
    endfunction
    call NERDTreeHighlightFile('ini', 'yellow', 'none', 'yellow', '#151515')
    call NERDTreeHighlightFile('md', 'blue', 'none', '#3366FF', '#151515')
    call NERDTreeHighlightFile('yml', 'yellow', 'none', 'yellow', '#151515')
    call NERDTreeHighlightFile('config', 'yellow', 'none', 'yellow', '#151515')
    call NERDTreeHighlightFile('conf', 'yellow', 'none', 'yellow', '#151515')
    call NERDTreeHighlightFile('json', 'yellow', 'none', 'yellow', '#151515')
    call NERDTreeHighlightFile('html', 'yellow', 'none', 'yellow', '#151515')
    call NERDTreeHighlightFile('css', 'cyan', 'none', 'cyan', '#151515')
    call NERDTreeHighlightFile('js', 'Red', 'none', '#ffa500', '#151515')

    " ディレクトリを指定したときだけ起動時に表示
    let g:nerdtree_tabs_open_on_console_startup=2
augroup END
'''

