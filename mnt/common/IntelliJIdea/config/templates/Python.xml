<templateSet group="Python">
  <template name="_main_tmpl" value="#!/usr/bin/env python&#10;# -*- coding: utf-8 -*-&#10;&#10;&#10;def main():&#10;    print(&quot;Hello&quot;)&#10;&#10;&#10;if __name__ == '__main__':&#10;    main()&#10;" description="Python template" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="_pytest_parametrize" value="#!/usr/bin/env python&#10;# -*- coding:utf-8 -*-&#10;&#10;import pytest&#10;&#10;&#10;def your_function(x: int) -&gt; int:&#10;    return x * 5&#10;&#10;&#10;class TestYourFunctionName:&#10;    @pytest.mark.parametrize(&quot;title, param, expected&quot;, [(&quot;Normal&quot;, 20, 100)])&#10;    def test_normal(self, title, param, expected):&#10;        actual = your_function(param)&#10;        assert expected == actual" description="Test template" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="init" value="def __init__(self$ARGS$):&#10;    $END$" description="__init__" toReformat="false" toShortenFQNames="true">
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python_Class" value="true" />
    </context>
  </template>
  <template name="_doctest" value="&quot;&quot;&quot;&#10;    Usage:&#10;        &gt;&gt;&gt; your_function(1)&#10;        5&#10;        &gt;&gt;&gt; your_function(&quot;hoge&quot;)&#10;        'hoge'&#10;        &lt;BLANKLINE&gt;&#10;        'hoge'&#10;        &gt;&gt;&gt; your_function(None)  # doctest: +NORMALIZE_WHITESPACE&#10;        Traceback (most recent call last):&#10;            ...&#10;            return x * 5&#10;        TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'&#10;&quot;&quot;&quot;" description="Test template" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>