<templateSet group="Vue">
  <template name="vue-component" value="&lt;template&gt;&lt;/template&gt;&#10;&lt;script lang=&quot;ts&quot;&gt;&#10;import * as _ from 'lodash';&#10;import { Dictionary } from 'lodash';&#10;import { Component, State, Getter, Mutation, Prop, Vue, Action } from '~/node_modules/nuxt-property-decorator';&#10;&#10;@Component({})&#10;export default class extends Vue {&#10;  @State st: any;&#10;  @State(s =&gt; s.hoge.huga) huga: any;&#10;  @Action onAction;&#10;  @Prop() prop: any;&#10;  @Mutation setHogehoge: (x: any) =&gt; any;&#10;  @Getter getHogeHoge: (x: any) =&gt; any;&#10;}&#10;&lt;/script&gt;&#10;&lt;style scoped&gt;&lt;/style&gt;" description="tadashi-aikawa Vue component template" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Vue" value="true" />
    </context>
  </template>
  <template name="__vue3-component" value="&lt;template&gt;&lt;/template&gt;&#10;&#10;&lt;script lang=&quot;ts&quot;&gt;&#10;import {&#10;  computed,&#10;  defineComponent,&#10;  onMounted,&#10;  reactive,&#10;  watch,&#10;} from &quot;@vue/composition-api&quot;;&#10;&#10;export default defineComponent({&#10;  components: {&#10;    // SampleComponent,&#10;  },&#10;  props: {&#10;    // hoge: { type: Object as () =&gt; Hoge, required: true },&#10;    // huga: { type: Array as () =&gt; Huga[] },&#10;    // hoho: { type: String, default: &quot;huga&quot; },&#10;  },&#10;  setup() {&#10;    const state = reactive({&#10;      prop: &quot;&quot;,&#10;    });&#10;&#10;    const computedProp = computed(() =&gt; `${state.prop}--`);&#10;&#10;    const handleAny = () =&gt; {};&#10;&#10;    watch(&#10;      () =&gt; state.prop,&#10;      (p) =&gt; p&#10;    );&#10;    onMounted(() =&gt; {});&#10;&#10;    return {&#10;      state,&#10;      computedProp,&#10;      handleAny,&#10;    };&#10;  },&#10;});&#10;&lt;/script&gt;&#10;&#10;&lt;style lang=&quot;scss&quot; scoped&gt;&lt;/style&gt;&#10;&#10;" description="tadashi-aikawa Vue component template" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Vue" value="true" />
    </context>
  </template>
</templateSet>